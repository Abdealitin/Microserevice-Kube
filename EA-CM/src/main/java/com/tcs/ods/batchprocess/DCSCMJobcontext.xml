<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                   http://www.springframework.org/schema/context
	                   http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">





	<bean id="DCSCMImportDao" class="com.tcs.ods.batchprocess.dao.impl.DCSCMImportDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<bean id="perlScriptProcessor" class="com.tcs.ods.batchprocess.infra.PerlScriptProcessor">
		<property name="apiFileLoadDaoImpl" ref="ApiFileLoadDao" />
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<bean id="ApiFileLoadDao" class="com.tcs.ods.batchprocess.dao.impl.ApiFileLoadDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="dcscmEDIHibernateTransformer"
		class="com.tcs.ods.batchprocess.dcscm.transform.DCSCMEDIHibernateTransformer">
	</bean>


	<bean id="importDCSCMService"
		class="com.tcs.ods.batchprocess.service.impl.ImportDCSCMServiceImpl">
		<property name="dcscmEDIHibernateTransformer" ref="dcscmEDIHibernateTransformer" />
		<property name="DCSCMImportDao" ref="DCSCMImportDao" />
	</bean>

	<bean id="dcsCmSmookHelper" class="com.tcs.ods.batchprocess.processor.SmooksDcsCmHelper">
		<property name="bidbrrSmooks" ref="bidbrrSmooks" />
		<property name="csmprrSmooks" ref="csmprrSmooks" />
		<property name="chdwrrSmooks" ref="chdwrrSmooks" />
		<property name="ccprrrSmooks" ref="ccprrrSmooks" />
	</bean>



	<batch:job id="partitionImportDCSCMJob">
		<batch:step id="readWriteDCSCM">
			<batch:partition step="partitionReadWriteDCSCM"
				partitioner="partitioner">
				<batch:handler grid-size="100" task-executor="taskExecutor" />
			</batch:partition>
		</batch:step>

	</batch:job>

	<batch:step id="partitionReadWriteDCSCM">
		<batch:tasklet>
			<batch:chunk reader="DCSCMItemReaderTarget" processor="DCSCMItemProcessor"
				writer="DCSCMWriter" commit-interval="300">
			</batch:chunk>
			<batch:listeners>
				<batch:listener ref="batchItemSkipListener" />
				<batch:listener ref="batchStepListener" />
				<batch:listener ref="batchChunkListener" />
				<batch:listener ref="batchItemReaderListener" />
				<batch:listener ref="batchITemProcessorListener" />
				<batch:listener ref="batchItemWriterListerner" />
			</batch:listeners>
		</batch:tasklet>
	</batch:step>


	<bean id="DCSCMItemReaderTarget" scope="step"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="#{stepExecutionContext[fileName]}" />
		<property name="lineMapper" ref="DCSCMLineMapper" />
	</bean>

	<bean id="DCSCMLineMapper" scope="step"  class="com.tcs.ods.batchprocess.domain.ItemLineMapper">
		<property name="splitFileName" value="#{stepExecutionContext[fileName]}" />
	</bean>

	<bean id="DCSCMItemProcessor" class="com.tcs.ods.batchprocess.processor.DCSCMprocessor"
		scope="step">
		<property name="threadName" value="#{stepExecutionContext[fileName]}" />
		<property name="dcsCmSmookHelper" ref="dcsCmSmookHelper" />
	</bean>


	<bean id="DCSCMWriter"
		class="com.tcs.ods.batchprocess.writer.DCSCMHibernateItemWriter"
		scope="step">
		<property name="threadName" value="#{stepExecutionContext[fileName]}" />
		<property name="importDCSCMService" ref="importDCSCMService" />
		<property name="filePath" value="#{jobParameters['ABSOLUTE_PATH']}" />
		<!-- <property name="fileName" value="#{jobParameters['FILE_NAME']}" /> -->
	</bean>


	<bean id="partitioner"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner"
		scope="step">
		<property name="keyName" value="fileName" />
		<property name="resources" value="#{jobParameters['TARGET_FILE_PATH']}" />
	</bean>



	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="18" />
		<property name="maxPoolSize" value="18" />
	</bean>
</beans>